"""
M√†n h√¨nh t·ªïng quan ·ª©ng d·ª•ng LaptopTester
Hi·ªÉn th·ªã th√¥ng tin v·ªÅ ·ª©ng d·ª•ng, t√≠nh nƒÉng, ch·∫ø ƒë·ªô test
"""

import customtkinter as ctk
import tkinter as tk
from PIL import Image
import webbrowser

class Theme:
    BACKGROUND="#F0F2F5"; FRAME="#FFFFFF"; ACCENT="#007AFF"; SUCCESS="#34C759"
    TEXT="#1C1C1E"; TEXT_SECONDARY="#6D6D72"; BORDER="#D9D9D9"
    TITLE_FONT=("Segoe UI", 36, "bold"); HEADING_FONT=("Segoe UI", 24, "bold")
    SUBHEADING_FONT=("Segoe UI", 20, "bold"); BODY_FONT=("Segoe UI", 16)
    SMALL_FONT=("Segoe UI", 14); CORNER_RADIUS=16

class AppOverviewFrame(ctk.CTkFrame):
    def __init__(self, master, start_callback, **kwargs):
        super().__init__(master, fg_color="transparent", **kwargs)
        self.start_callback = start_callback
        
        self.grid_columnconfigure(0, weight=1)
        self.grid_rowconfigure(1, weight=1)
        
        self.create_header()
        self.create_main_content()
        self.create_footer()
    
    def create_header(self):
        """T·∫°o header chuy√™n nghi·ªáp v·ªõi logo v√† gi·ªõi thi·ªáu"""
        header = ctk.CTkFrame(self, fg_color=Theme.FRAME, corner_radius=Theme.CORNER_RADIUS)
        header.grid(row=0, column=0, sticky="ew", padx=30, pady=(30,15))
        
        # Main header content
        header_content = ctk.CTkFrame(header, fg_color="transparent")
        header_content.pack(fill="both", expand=True, pady=20)
        header_content.grid_columnconfigure((0,1), weight=1)
        
        # Left side - Logo v√† ti√™u ƒë·ªÅ
        left_frame = ctk.CTkFrame(header_content, fg_color="transparent")
        left_frame.grid(row=0, column=0, sticky="w", padx=30)
        
        # Logo chuy√™n nghi·ªáp
        logo_frame = ctk.CTkFrame(left_frame, width=100, height=100, fg_color="#667eea", corner_radius=20)
        logo_frame.pack(pady=(0,15))
        logo_frame.pack_propagate(False)
        ctk.CTkLabel(logo_frame, text="üíª", font=("Segoe UI", 48)).pack(expand=True)
        
        # Ti√™u ƒë·ªÅ v√† slogan
        ctk.CTkLabel(left_frame, text="LaptopTester Pro", font=Theme.TITLE_FONT, text_color=Theme.ACCENT).pack(anchor="w")
        ctk.CTkLabel(left_frame, text="Gi·∫£i ph√°p ki·ªÉm tra laptop chuy√™n nghi·ªáp", font=Theme.HEADING_FONT, text_color=Theme.TEXT_SECONDARY).pack(anchor="w", pady=(5,0))
        ctk.CTkLabel(left_frame, text="Version 2.0 Professional | Build 2024.10", font=Theme.SMALL_FONT, text_color=Theme.TEXT_SECONDARY).pack(anchor="w", pady=(10,0))
        
        # Right side - Gi·ªõi thi·ªáu ng·∫Øn
        right_frame = ctk.CTkFrame(header_content, fg_color="#F8F9FF", corner_radius=15)
        right_frame.grid(row=0, column=1, sticky="nsew", padx=30)
        
        ctk.CTkLabel(right_frame, text="üéØ Gi·ªõi Thi·ªáu LaptopTester", font=Theme.SUBHEADING_FONT, text_color=Theme.ACCENT).pack(pady=(20,10))
        
        intro_text = (
            "LaptopTester l√† ph·∫ßn m·ªÅm ki·ªÉm tra laptop chuy√™n nghi·ªáp ƒë∆∞·ª£c ph√°t tri·ªÉn b·ªüi Laptop L√™ ·∫®n v√† Gemini AI. "
            "Ph·∫ßn m·ªÅm ƒë·ªçc th√¥ng tin tr·ª±c ti·∫øp t·ª´ BIOS v√† firmware ƒë·ªÉ ch·ªëng l·ª´a ƒë·∫£o c·∫•u h√¨nh. "
            "T√≠nh nƒÉng l·∫•y c·∫•u h√¨nh ph·∫ßn c·ª©ng t·ª´ BIOS gi√∫p ph√°t hi·ªán th√¥ng tin gi·∫£ m·∫°o trong Windows, "
            "b·∫£o v·ªá ng∆∞·ªùi mua kh·ªèi c√°c th·ªß ƒëo·∫°n l·ª´a ƒë·∫£o ph·ªï bi·∫øn trong th·ªã tr∆∞·ªùng laptop c≈©."
        )
        
        ctk.CTkLabel(right_frame, text=intro_text, font=Theme.BODY_FONT, text_color=Theme.TEXT, 
                    wraplength=400, justify="left").pack(padx=20, pady=(0,20))
    
    def create_main_content(self):
        """T·∫°o n·ªôi dung ch√≠nh"""
        main_frame = ctk.CTkFrame(self, fg_color="transparent")
        main_frame.grid(row=1, column=0, sticky="nsew", padx=30, pady=15)
        main_frame.grid_columnconfigure((0,1), weight=1)
        main_frame.grid_rowconfigure((0,1), weight=1)
        
        # Features panel
        self.create_features_panel(main_frame)
        
        # Test modes panel  
        self.create_modes_panel(main_frame)
        
        # About panel
        self.create_about_panel(main_frame)
        
        # Quick start panel
        self.create_quickstart_panel(main_frame)
    
    def create_features_panel(self, parent):
        """Panel t√≠nh nƒÉng"""
        features_frame = ctk.CTkFrame(parent, fg_color=Theme.FRAME, corner_radius=Theme.CORNER_RADIUS)
        features_frame.grid(row=0, column=0, sticky="nsew", padx=(0,15), pady=(0,15))
        
        ctk.CTkLabel(features_frame, text="üöÄ T√≠nh NƒÉng N·ªïi B·∫≠t", font=Theme.HEADING_FONT, text_color=Theme.ACCENT).pack(pady=(20,15))
        
        features = [
            "üîç **Ki·ªÉm tra BIOS vs Windows**: Ph√°t hi·ªán th√¥ng tin gi·∫£ m·∫°o",
            "üõ°Ô∏è **Ch·ªëng l·ª´a ƒë·∫£o**: ƒê·ªçc tr·ª±c ti·∫øp t·ª´ ph·∫ßn c·ª©ng",
            "‚öôÔ∏è **15+ Test chuy√™n s√¢u**: T·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao", 
            "ü§ñ **AI Ph√¢n t√≠ch**: G·ª£i √Ω th√¥ng minh theo model laptop",
            "üéØ **2 Ch·∫ø ƒë·ªô**: Basic (15p) v√† Expert (45p)",
            "üìä **B√°o c√°o PDF**: Xu·∫•t k·∫øt qu·∫£ chuy√™n nghi·ªáp",
            "‚ö° **Stress Test**: CPU, GPU, RAM, SSD performance",
            "üìà **Benchmark**: So s√°nh v·ªõi chu·∫©n c√¥ng nghi·ªáp"
        ]
        
        for feature in features:
            ctk.CTkLabel(features_frame, text=feature, font=Theme.BODY_FONT, text_color=Theme.TEXT).pack(anchor="w", padx=20, pady=3)
        
        ctk.CTkLabel(features_frame, text="", height=20).pack()  # Spacer
    
    def create_modes_panel(self, parent):
        """Panel ch·∫ø ƒë·ªô test"""
        modes_frame = ctk.CTkFrame(parent, fg_color=Theme.FRAME, corner_radius=Theme.CORNER_RADIUS)
        modes_frame.grid(row=0, column=1, sticky="nsew", padx=(15,0), pady=(0,15))
        
        ctk.CTkLabel(modes_frame, text="üéØ Ch·∫ø ƒê·ªô Ki·ªÉm Tra", font=Theme.HEADING_FONT, text_color=Theme.ACCENT).pack(pady=(20,15))
        
        # T·∫°i sao c·∫ßn ki·ªÉm tra BIOS vs Windows?
        why_bios_frame = ctk.CTkFrame(modes_frame, fg_color="#E3F2FD", corner_radius=12)
        why_bios_frame.pack(fill="x", padx=20, pady=10)
        
        ctk.CTkLabel(why_bios_frame, text="üîç T·∫°i sao c·∫ßn ki·ªÉm tra BIOS vs Windows?", font=Theme.SUBHEADING_FONT, text_color="#1565C0").pack(pady=(15,10))
        
        bios_reasons = [
            "‚Ä¢ **BIOS kh√¥ gi·∫£ m·∫°o**: Th√¥ng tin t·ª´ firmware g·ªëc, kh√¥ng th·ªÉ ch·ªânh s·ª≠a",
            "‚Ä¢ **Windows c√≥ th·ªÉ b·ªã hack**: Driver gi·∫£, software fake c·∫•u h√¨nh",
            "‚Ä¢ **Ph√°t hi·ªán sai l·ªách**: CPU, RAM, GPU th·ª±c t·∫ø vs qu·∫£ng c√°o",
            "‚Ä¢ **Ch·ªëng l·ª´a ƒë·∫£o**: B·∫£o v·ªá ng∆∞·ªùi mua kh·ªèi fake th√¥ng tin",
            "‚Ä¢ **Ki·ªÉm tra to√†n di·ªán**: 15+ b∆∞·ªõc t·ª´ ph·∫ßn c·ª©ng ƒë·∫øn ph·∫ßn m·ªÅm"
        ]
        
        for reason in bios_reasons:
            ctk.CTkLabel(why_bios_frame, text=reason, font=Theme.SMALL_FONT, text_color="#0D47A1").pack(anchor="w", padx=20, pady=2)
        
        ctk.CTkLabel(why_bios_frame, text="", height=10).pack()
        
        # Basic mode
        basic_frame = ctk.CTkFrame(modes_frame, fg_color="#E8F5E8", corner_radius=12)
        basic_frame.pack(fill="x", padx=20, pady=10)
        
        ctk.CTkLabel(basic_frame, text="üü¢ Ch·∫ø ƒê·ªô C∆° B·∫£n", font=Theme.SUBHEADING_FONT, text_color=Theme.SUCCESS).pack(pady=(10,5))
        basic_features = ["‚Ä¢ 10 b∆∞·ªõc ki·ªÉm tra c∆° b·∫£n", "‚Ä¢ D√†nh cho ng∆∞·ªùi d√πng th√¥ng th∆∞·ªùng", "‚Ä¢ Th·ªùi gian: 15-20 ph√∫t", "‚Ä¢ Ki·ªÉm tra: BIOS, Windows, ph·∫ßn c·ª©ng c∆° b·∫£n"]
        for feature in basic_features:
            ctk.CTkLabel(basic_frame, text=feature, font=Theme.SMALL_FONT, text_color=Theme.TEXT).pack(anchor="w", padx=15, pady=1)
        ctk.CTkLabel(basic_frame, text="", height=5).pack()
        
        # Expert mode  
        expert_frame = ctk.CTkFrame(modes_frame, fg_color="#FFE8E8", corner_radius=12)
        expert_frame.pack(fill="x", padx=20, pady=10)
        
        ctk.CTkLabel(expert_frame, text="üî¥ Ch·∫ø ƒê·ªô Chuy√™n Gia", font=Theme.SUBHEADING_FONT, text_color="#FF3B30").pack(pady=(10,5))
        expert_features = ["‚Ä¢ 15+ b∆∞·ªõc ki·ªÉm tra chuy√™n s√¢u", "‚Ä¢ Stress test CPU, GPU, RAM", "‚Ä¢ Th·ªùi gian: 30-45 ph√∫t", "‚Ä¢ Benchmark v√† so s√°nh hi·ªáu nƒÉng"]
        for feature in expert_features:
            ctk.CTkLabel(expert_frame, text=feature, font=Theme.SMALL_FONT, text_color=Theme.TEXT).pack(anchor="w", padx=15, pady=1)
        ctk.CTkLabel(expert_frame, text="", height=5).pack()
    
    def create_about_panel(self, parent):
        """Panel th√¥ng tin"""
        about_frame = ctk.CTkFrame(parent, fg_color=Theme.FRAME, corner_radius=Theme.CORNER_RADIUS)
        about_frame.grid(row=1, column=0, sticky="nsew", padx=(0,15), pady=(15,0))
        
        ctk.CTkLabel(about_frame, text="‚ÑπÔ∏è Th√¥ng Tin Nh√† Ph√°t Tri·ªÉn", font=Theme.HEADING_FONT, text_color=Theme.ACCENT).pack(pady=(20,15))
        
        info_items = [
            ("üë®‚Äçüíª Ph√°t tri·ªÉn b·ªüi:", "Laptop L√™ ·∫®n & Gemini AI"),
            ("üìç ƒê·ªãa ch·ªâ:", "237/1C T√¥n Th·∫•t Thuy·∫øt, P. Vƒ©nh H·ªôi (P.3, Q.4 c≈©), TPHCM"),
            ("üìû ƒêi·ªán tho·∫°i:", "0976.896.621"),
            ("üìß Email:", "laptoplean@gmail.com"),
            ("üìÖ Phi√™n b·∫£n:", "2.0 Professional (Build 2024.10.29)"),
            ("‚öñÔ∏è B·∫£n quy·ªÅn:", "Commercial License - All Rights Reserved"),
            ("üéØ M·ª•c ƒë√≠ch:", "Ki·ªÉm tra laptop c≈© ch·ªëng l·ª´a ƒë·∫£o c·∫•u h√¨nh")
        ]
        
        for label, value in info_items:
            item_frame = ctk.CTkFrame(about_frame, fg_color="transparent")
            item_frame.pack(fill="x", padx=20, pady=3)
            ctk.CTkLabel(item_frame, text=label, font=Theme.SMALL_FONT, text_color=Theme.TEXT_SECONDARY).pack(side="left")
            ctk.CTkLabel(item_frame, text=value, font=Theme.SMALL_FONT, text_color=Theme.TEXT).pack(side="right")
        
        # Links
        links_frame = ctk.CTkFrame(about_frame, fg_color="transparent")
        links_frame.pack(pady=15)
        
        ctk.CTkButton(links_frame, text="üìû Li√™n h·ªá", width=100, height=30, 
                     command=self._show_contact_info).pack(side="left", padx=5)
        ctk.CTkButton(links_frame, text="üìñ H∆∞·ªõng d·∫´n", width=100, height=30,
                     command=self._show_user_guide).pack(side="left", padx=5)
    
    def _show_contact_info(self):
        import tkinter.messagebox as msgbox
        contact_info = (
            "Laptop L√™ ·∫®n & Gemini AI\n\n"
            "üìç ƒê·ªãa ch·ªâ: 237/1C T√¥n Th·∫•t Thuy·∫øt\n"
            "P. Vƒ©nh H·ªôi (P.3, Q.4 c≈©), TPHCM\n\n"
            "üìû ƒêi·ªán tho·∫°i: 0976.896.621\n"
            "üìß Email: laptoplean@gmail.com\n\n"
            "üéØ Ch·ª©c nƒÉng ch√≠nh:\n"
            "- Ki·ªÉm tra laptop c≈© ch·ªëng l·ª´a ƒë·∫£o\n"
            "- ƒê·ªçc th√¥ng tin t·ª´ BIOS v√† ph·∫ßn c·ª©ng\n"
            "- Ph√°t hi·ªán sai l·ªách c·∫•u h√¨nh gi·∫£ m·∫°o\n"
            "- B·∫£o v·ªá ng∆∞·ªùi mua kh·ªèi r·ªßi ro t√†i ch√≠nh"
        )
        msgbox.showinfo("Th√¥ng Tin Li√™n H·ªá & Ch·ª©c NƒÉng", contact_info)
    
    def _show_user_guide(self):
        import tkinter.messagebox as msgbox
        guide_info = (
            "H∆∞·ªõng D·∫´n S·ª≠ D·ª•ng LaptopTester:\n\n"
            "1. Ch·ªçn ch·∫ø ƒë·ªô ph√π h·ª£p\n"
            "2. L√†m theo h∆∞·ªõng d·∫´n t·ª´ng b∆∞·ªõc\n"
            "3. ƒê·ªçc k·∫øt qu·∫£ theo m√†u s·∫Øc\n"
            "4. Quy·∫øt ƒë·ªãnh mua hay kh√¥ng\n\n"
            "M√†u s·∫Øc k·∫øt qu·∫£:\n"
            "üü¢ Xanh: T·ªët, an to√†n\n"
            "üü° V√†ng: C·∫£nh b√°o, ch√∫ √Ω\n"
            "üî¥ ƒê·ªè: L·ªói nghi√™m tr·ªçng"
        )
        msgbox.showinfo("H∆∞·ªõng D·∫´n S·ª≠ D·ª•ng", guide_info)
    
    def create_quickstart_panel(self, parent):
        """Panel b·∫Øt ƒë·∫ßu nhanh"""
        quick_frame = ctk.CTkFrame(parent, fg_color=Theme.FRAME, corner_radius=Theme.CORNER_RADIUS)
        quick_frame.grid(row=1, column=1, sticky="nsew", padx=(15,0), pady=(15,0))
        
        ctk.CTkLabel(quick_frame, text="‚ö° B·∫Øt ƒê·∫ßu Nhanh", font=Theme.HEADING_FONT, text_color=Theme.ACCENT).pack(pady=(20,15))
        
        # T·∫°i sao c·∫ßn LaptopTester?
        why_frame = ctk.CTkFrame(quick_frame, fg_color="#FFF3E0", corner_radius=12)
        why_frame.pack(fill="x", padx=20, pady=(0,15))
        
        ctk.CTkLabel(why_frame, text="ü§î T·∫°i sao c·∫ßn LaptopTester?", font=Theme.SUBHEADING_FONT, text_color="#E65100").pack(pady=(15,10))
        
        reasons = [
            "‚ö†Ô∏è **Ch·ªëng l·ª´a ƒë·∫£o**: Ph√°t hi·ªán fake RAM, CPU, GPU qua BIOS",
            "üîç **Ki·ªÉm tra s√¢u**: Ph√°t hi·ªán l·ªói ·∫©n ph·∫ßn c·ª©ng, pin chai",
            "üí∞ **Ti·∫øt ki·ªám**: Tr√°nh mua laptop l·ªói gi√° cao, s·ª≠a ch·ªØa t·ªën k√©m",
            "üõ°Ô∏è **B·∫£o v·ªá**: ƒê·∫£m b·∫£o ƒë·∫ßu t∆∞ ƒë√∫ng ch·ªó, kh√¥ng b·ªã l·ª´a",
            "üéØ **Chuy√™n nghi·ªáp**: C√¥ng c·ª• c·ªßa k·ªπ thu·∫≠t vi√™n laptop"
        ]
        
        for reason in reasons:
            ctk.CTkLabel(why_frame, text=reason, font=Theme.SMALL_FONT, text_color="#BF360C").pack(anchor="w", padx=20, pady=2)
        
        ctk.CTkLabel(why_frame, text="", height=10).pack()
        
        # H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng
        steps = [
            "1Ô∏è‚É£ **Ch·ªçn ch·∫ø ƒë·ªô**: Basic (nhanh) ho·∫∑c Expert (chi ti·∫øt)",
            "2Ô∏è‚É£ **L√†m theo h∆∞·ªõng d·∫´n**: T·ª´ng b∆∞·ªõc c√≥ gi·∫£i th√≠ch r√µ r√†ng", 
            "3Ô∏è‚É£ **ƒê·ªçc k·∫øt qu·∫£**: M√†u xanh (t·ªët), v√†ng (c·∫£nh b√°o), ƒë·ªè (l·ªói)",
            "4Ô∏è‚É£ **Quy·∫øt ƒë·ªãnh**: Mua ho·∫∑c kh√¥ng d·ª±a tr√™n k·∫øt qu·∫£"
        ]
        
        for step in steps:
            ctk.CTkLabel(quick_frame, text=step, font=Theme.BODY_FONT, text_color=Theme.TEXT).pack(anchor="w", padx=20, pady=5)
        
        # Action buttons
        action_frame = ctk.CTkFrame(quick_frame, fg_color="transparent")
        action_frame.pack(pady=20)
        
        # Action buttons v·ªõi m√¥ t·∫£ r√µ r√†ng
        basic_btn_frame = ctk.CTkFrame(action_frame, fg_color="#E8F5E8", corner_radius=8)
        basic_btn_frame.pack(fill="x", pady=5)
        ctk.CTkLabel(basic_btn_frame, text="Ng∆∞·ªùi d√πng th√¥ng th∆∞·ªùng - 15 ph√∫t", font=Theme.SMALL_FONT, text_color="#2E7D32").pack(pady=(8,2))
        ctk.CTkButton(basic_btn_frame, text="üöÄ B·∫Øt ƒê·∫ßu Basic Mode", 
                     command=lambda: self.start_callback("basic"),
                     fg_color=Theme.SUCCESS, width=200, height=35, font=Theme.BODY_FONT).pack(pady=(0,8))
        
        expert_btn_frame = ctk.CTkFrame(action_frame, fg_color="#FFEBEE", corner_radius=8)
        expert_btn_frame.pack(fill="x", pady=5)
        ctk.CTkLabel(expert_btn_frame, text="Chuy√™n gia/K·ªπ thu·∫≠t vi√™n - 45 ph√∫t", font=Theme.SMALL_FONT, text_color="#C62828").pack(pady=(8,2))
        ctk.CTkButton(expert_btn_frame, text="üî• B·∫Øt ƒê·∫ßu Expert Mode", 
                     command=lambda: self.start_callback("expert"),
                     fg_color="#FF3B30", width=200, height=35, font=Theme.BODY_FONT).pack(pady=(0,8))
    
    def create_footer(self):
        """T·∫°o footer"""
        footer = ctk.CTkFrame(self, fg_color=Theme.FRAME, corner_radius=Theme.CORNER_RADIUS, height=60)
        footer.grid(row=2, column=0, sticky="ew", padx=30, pady=(15,30))
        
        footer_content = ctk.CTkFrame(footer, fg_color="transparent")
        footer_content.pack(expand=True, fill="both")
        
        ctk.CTkLabel(footer_content, text="¬© 2024 LaptopTester Pro. All rights reserved.", 
                    font=Theme.SMALL_FONT, text_color=Theme.TEXT_SECONDARY).pack(expand=True)